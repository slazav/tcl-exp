#!/usr/bin/perl
use strict;
use warnings;
use JSON;

############################################################
############################################################
# Update PNG picture

############################################################
## path to sig_filter program
my $sig_filter = '~/PROG/pico_osc/sig_filter/sig_filter';
#my $sig_filter = 'sig_filter';


############################################################
## Process signals
foreach my $sig (@ARGV) {
  my $inf = $sig; $inf=~s/\.sigf?$//; $inf.='.inf';
  my $png = $sig; $png=~s/\.sigf?$//; $png.='.png';
  `sig_get_info $sig` unless -f $inf;

  my $r = `[ $png -ot $inf -o $png -ot $sig ] && echo 1 || echo 0`;
  chomp($r); next if $r == 0;

  open INF, "$inf" or die "can't open file: $inf: $!\n";
  my $pars = decode_json(join "\n", (<INF>));
  close INF;

  next if -f $png;
  my $cmd= $sig_filter .
         ($pars->{tmin}   ? " -T $pars->{tmin}":"") .
         ($pars->{tmax}   ? " -U $pars->{tmax}":"") .
         " -f sfft_pnm \"$sig\"" .
         ($pars->{fmin}   ? " -F $pars->{fmin}":"") .
         ($pars->{fmax}   ? " -G $pars->{fmax}":"") .
         ($pars->{amin}   ? " -A $pars->{amin}":"") .
         ($pars->{amax}   ? " -B $pars->{amax}":"") .
         ($pars->{png_win}? " -w $pars->{png_win}":"") .
         ($pars->{W}      ? " -W $pars->{W}":"") .
         ($pars->{H}      ? " -H $pars->{H}":"") .
         " | /usr/bin/pnmtopng > \"$png\"";
  print "make PNG: $png\n";
  `$cmd`;
}
