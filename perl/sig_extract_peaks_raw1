#!/usr/bin/perl
use strict;
use warnings;
use JSON;

my $prog = $0;
$prog =~s|^.*/([^/]*$)|$1|;

############################################################
############################################################
# Extract peak information from inf-files and print it as a table
# Group signals by Uexc and Grad, create subfolders

############################################################
my $ts=0; # temperature sum
my $n=0;  # temperature counter
my $ptn=0; # point counter
my $dir;
my %ids;  # old excitation

opendir SD, "." or die "can't open sig folder: .: $!\n";
foreach my $sig (sort readdir SD){
  next unless $sig=~/_n\.sig$/;


  # read inf file for the signal
  my $inf = $sig; $inf=~s/\.sigf?$//; $inf.='.inf';
  `sig_get_info $sig` unless -f $inf;
  open INF, "$inf" or die "can't open file: $inf: $!\n";
  my $pars = decode_json(join "\n", (<INF>));
  close INF;

  next unless exists $pars->{fig_peaks};

  my $fre  = $pars->{fre};
  my $exc  = $pars->{exc};
  my $grad = $pars->{grad}*1000;
  my $quad = $pars->{quad}*1000;
  my $temp = $pars->{temp}*1000;
  my $dfdt = $pars->{dfdt};
  my $df   = $pars->{larm_df} || 0;

  my $id = sprintf("%.2f_%.0f", $exc, $grad);
  # goto next point
  if (exists $ids{$id}) {
    $ts/=$n; $n=0;
    %ids = ();
  }

  # new point
  if ($n==0){
    $ptn++;
    $dir = sprintf("pt%03d", $ptn);
    `mkdir -p $dir`;
    `rm -f $dir/*.peak`;
     print STDERR "$ptn\n";
  }

  print STDERR "  $id - $n -- $sig\n";

  $n++;
  $ts+=$temp;
  $ids{$id}=1;

  foreach my $p (@{$pars->{fig_peaks}}){
    my @T = @{$p->{T}};
    my @F = @{$p->{F}};
    my @A = @{$p->{A}};
    my @Q = @{$p->{Q}};
    my @DF;
    my @FF;

    # skip larmor peak
    $p->{name} = "larm" if $p->{name} eq "l";
    next if $p->{name} eq "larm";

    # convert time to freq.shift, scale x2, x3 etc peaks:
    for (my $i=0; $i<$#T; $i++){
      $DF[$i] = $T[$i]*$dfdt-$df;
      $F[$i]/=$1 if $p->{name}=~/(\d)$/;
    }
    # remove numbers from names:
    $p->{name}=~s/\d$//;

    open OUT, ">> $dir/${id}_$p->{name}.peak"
      or die "can't open file: $dir/${id}_$p->{name}.peak: $!";
    # print raw peak data
    for (my $i=0; $i<$#T; $i++){
      printf OUT "%e %e %e %e\n", $DF[$i], $F[$i], $A[$i], $Q[$i];
    }
    print OUT "\n";
    close OUT;
  }

}

for (my $i=1; $i<=$ptn; $i++){
  $dir = sprintf("pt%03d", $i);
  opendir PD, $dir or die "can't open folder: $dir: $!\n";
  open O, "> $dir/plot" or die "can't open plot file: $!\n";
  print O "#!/usr/bin/gnuplot\n plot\\\n";
  foreach my $p (sort readdir PD){
    next unless $p=~/\.peak$/;
    print O "\"$p\" using (-\$1):(\$2**2),\\\n";
  }
  print O "\n\npause -1\n";
  close O;
  `chmod 755 $dir/plot`;
}
