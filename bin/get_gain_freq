#!/usr/bin/tclsh

package require DeviceRole 1.1
package require Exp
package require xBlt

## script for measuring frequency response
## with a generator and a lock-in amp.

## set all parameters from cmdline
#
# -g -gen_dev   -- generator device (default gen0:1)
# -m -meas_dev  -- measurement device (default lockin0:XY)
# -p -ps_dev    -- power supply device (default {})
# -v -volt      -- voltage (default 0.01)
# -o -offs      -- offset (default 0.0)
# -V -vcc       -- Vcc  (default 3)
# -I -icc       -- Icc  (default 0.0005)
# -F -fmin      -- min frequency (default 23e3)
# -G -fmax      -- max frequency (default 2e6)
# -n            -- number of points (default 100)
# -L -log       -- logarithmic step (default 1)
# -d -dt        -- delay between samples  (default 0.5)
# -D -del       -- initial delay (default 2)
# -t -tconst    -- measurement time constant, s (default 0.1)
# -g -gfactor   -- gain factor, ratio of measured/set signal for direct connecton (default 1)
#  (for lockin -g 1/sqrt(8), for osc -g 1/sqrt(2) )
# -a -autorange -- do autorange: 0 - never, 1 - on first point, 2 - on each point (default 0)

set options [list \
{-g -gen_dev}  gen_dev  {gen0:1}\
{-m -meas_dev} meas_dev {lockin0:XY}\
{-p -ps_dev}   ps_dev   {}\
{-v -volt}     volt     {0.01}\
{-o -offs}     offs     {0.0}\
{-V -vcc}      vcc      {3}\
{-I -icc}      icc      {0}\
{-F -fmin}     fmin     {25e3}\
{-G -fmax}     fmax     {2e6}\
{-n}           npts     {100}\
{-L -log}      log      {1}\
{-d -dt}       dt       {0.5}\
{-D -del}      del      {2}\
{-t -tconst}   tconst   {0.1}\
{-g -gfactor}  gfact    {1}\
{-a -autorange} arange  {0}\
]


set vcc_on [opt_on "-V -vcc"]
set icc_on [opt_on "-I -icc"]

xblt::parse_options "get_gain_freq" $argv $options

if {$ps_dev != {}} {
  if { ${vcc_on} > 0 && ${icc_on} == 0} {
    set dc_mode volt
    set dc_m v
    set pcc $vcc
  } elseif { ${icc_on} > 0 && ${vcc_on} == 0} {
    set dc_mode curr
    set dc_m i
    set pcc $icc
  } else {
    error "confusing options: -vcc $vcc -icc $icc"
  }
}

if {$npts <= 0} {error "$npts <= 0"}

if {$npts!=1} {
  if {$fmax <= $fmin} {error "$fmax <= $fmin"}
  set df  [expr {1.0*($fmax-$fmin)/($npts-1)}]
  set dfk [expr {pow(1.0*$fmax/$fmin, 1.0/($npts-1))}]
} else {
  set df  0
  set dfk 1
}

proc ps_set {val} {
    if { $::dc_mode == "volt" } { $::ps set_volt $val } { $::ps set_curr $val }
}


## prepare generator
set gen   [DeviceRole $gen_dev ac_source]
$gen set_ac $fmin $volt $offs
$gen set_sync 1

## prepare lock-in
set gauge [DeviceRole $meas_dev gauge]
$gauge set_tconst $tconst

if {$ps_dev != {}} {
  set ps [DeviceRole $ps_dev dc_source]
  ps_set $pcc
}

# initial delay
after [expr {int($del*1000)}]

if {$ps_dev != {}} {
  puts "# freq volt ${dc_m}cc gain x y"
} else {
  puts "# freq volt gain x y"
}

set f $fmin
set f_set nan
for {set i 0} {$i < $npts} {incr i} {
  if {$f_set != [format "%.3f" $f]} {
    set f_set [format "%.0f" $f]
    $gen set_ac $f_set $volt $offs
    after [expr {int($dt*1000)}]
    if {($arange>1) || ($arange==1 && $i==0)} {
      set out [$gauge get_auto]
    } else {
      set out [$gauge get]
    }

    set x [lindex $out 0]
    set y [lindex $out 1]
    if {$x eq NaN || $y eq NaN} { set g NaN }\
    else {set g [expr {sqrt($x**2+$y**2)/$gfact/$volt}]}
    if {$ps_dev != {}} {
      puts "$f_set $volt $pcc $g $x $y"
    } else {
      puts "$f_set $volt $g $x $y"
    }
  }
  set f [expr {$log? $f*$dfk : $f+$df}]

}
