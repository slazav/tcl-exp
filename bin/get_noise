#!/usr/bin/tclsh

package require Device 1.3
package require xBlt

# Script for measuring noise spectrum with an oscilloscope

## set all parameters from cmdline
#
# -O -osc_dev  -- oscilloscope device (default osc0)
# -s -scale    -- oscilloscope scale (default 0.05)
# -d -dt       -- sampling rate, s (default 5e-8)
# -N -nsamp    -- sample count (default 10e6)
# -n -nout     -- number of output points (default 1000)
# -A -avr      -- number of averages (default 1)
# -F -fmin     -- filter min frequency (default "")
# -G -fmax     -- filter max frequency (default "")
# -T -tmin     -- filter min time (default "0.1")
# -U -tmax     -- filter max time (default "")
# -L -log      -- logarithmic step (default 1)
# -D -del      -- initial delay (default 5)
# -c -chan     -- channel (default A), only single channel is supported now

set options [list \
{-O -osc_dev}  osc_dev  {osc0}\
{-s -scale}    scale    {0.05}\
{-d -dt}       dt       {5e-8}\
{-N -nsamp}    nsamp    {10e6}\
{-n -nout}     nout     {1000}\
{-A -avr}      avr      {1}\
{-F -fmin}     fmin     {}\
{-G -fmax}     fmax     {}\
{-T -tmin}     tmin     {0.1}\
{-U -tmax}     tmax     {}\
{-L -log}      log      {1}\
{-D -del}      del      {5}\
{-c -chan}     chan     {A}\
]

xblt::parse_options "get_noise" $argv $options


## build filter parameters:
set fpars1 "-f fft_pow"
set fpars2 "-N $nout"
if {$log == 1}   {set fpars2 "$fpars2 -l"}
if {$fmin != {}} {set fpars2 "$fpars2 -F $fmin"}
if {$fmax != {}} {set fpars2 "$fpars2 -G $fmax"}
if {$tmin != {}} {set fpars1 "$fpars1 -T $tmin"}
if {$tmax != {}} {set fpars1 "$fpars1 -U $tmax"}


Device $osc_dev
blt::vector create va
blt::vector create vx
blt::vector create vy
blt::vector create vys

$osc_dev cmd chan_set $chan 1 AC $scale
$osc_dev cmd trig_set NONE 0.1 RISING 0

puts stderr "waiting..."

after [expr {int($del*1000)}]
set names {}
set pref /tmp/get_noise.sig
for {set i 0} {$i<$avr} {incr i} {

  puts stderr "recording signal $i/$avr"
  $osc_dev cmd block $chan 0 $nsamp $dt $pref
  $osc_dev cmd wait

  # Overload check
  if {[$osc_dev cmd filter -f overload -c 0 $pref] == 1} {
    puts stderr "OVERLOAD" }

  # read and average FFT
  set data [$osc_dev cmd filter {*}$fpars1 $pref {*}$fpars2]

  if {$i > 0} {
    vx delete 0:end
    vy delete 0:end
  }
  foreach {v} $data {
    vx append [lindex $v 0]
    vy append [lindex $v 1]
  }
  if {$i==0} { vys expr vy }\
  else {vys expr vys+vy}
}
vys expr vys/$avr

exec rm -f -- $pref

puts "# freq [Hz]  noise density [V^2/Hz]"
for {set i 0} {$i<[vx length]} {incr i} {
  puts "$vx($i) $vys($i)"
}
