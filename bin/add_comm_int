#!/usr/bin/wish

## Interface for adding comments

package require Device 1.2
package require xBlt 3


set dev db_exp
set db  drydemag_comments

set lnum 10
set lst {}

##################################################
## make interface

## title
label .name  -text "Add comments to $db" -font {-size 12} -anchor w
grid .name -columnspan 2 -sticky w
grid columnconfigure . 1 -weight 1

## timestamp entry
label .tstamp_l  -text "Timestamp:" -width 12 -anchor w
entry .tstamp    -textvariable tstamp
grid  .tstamp_l .tstamp -sticky we

## text entry
label .text_l -text "Text:" -width 12 -anchor w
entry .text -textvariable text
grid .text_l .text -sticky we

## button frame1
frame .f1
grid .f1 -columnspan 2 -sticky ew

button .f1.new_btn -text "Add new" -command on_add -width 6
button .f1.mod_btn -text "Modify"  -command on_mod -width 6 -state disabled
button .f1.del_btn -text "Delete"  -command on_del -width 6 -state disabled
grid .f1.new_btn .f1.mod_btn .f1.del_btn -sticky ew

## recent comment list
listbox .lb -selectmode browse -height $lnum -width 70 -exportselection 0
grid .lb -columnspan 2 -sticky we
bind .lb <<ListboxSelect>> "on_sel %W"
.lb insert 0 "<add new>"

## button frame2
frame .f2
grid .f2 -columnspan 2 -sticky ew

#button .f2.l_btn -text "<"        -command on_l -width 6  -state disabled
button .f2.res_btn -text "Reread" -command on_res -width 6
#button .f2.r_btn -text ">"        -command on_r -width 6  -state disabled
#grid .f2.l_btn .f2.res_btn .f2.r_btn
grid .f2.res_btn



#### button actions

proc on_res {} {
  global lnum tstamp text dev db lst_t

  # update listbox
  set t {}
  for {set i 1} {$i<$lnum} {incr i} {
    set r [lindex [$dev cmd get_prev $db $t] 0]
    if {$r=={}} {break}
    set t [lindex $r 0]
    set v [lrange $r 1 end]
    set ts [clock format [expr int($t)] -format "%Y-%m-%d %H:%M:%S"]
    .lb delete $i
    .lb insert $i "$ts $v"
    set lst_t($i) $t
    set t "$t-"
  }

  # reset it to <add new> entry
  .lb activate 0
  .lb selection set 0
  on_sel .lb

  # sync db
  $dev cmd sync
}

proc on_add {} {
  global lnum tstamp text dev db lst
  if {$text=={} || $tstamp=={}} return
  set nt [exec date -d "$tstamp" +%s]
  $dev cmd put $db $nt "$text"
  on_res
}

proc on_mod {} {
  global dev db lst_t text tstamp
  set i [.lb curselection]
  set t $lst_t($i)
  set nt [exec date -d "$tstamp" +%s]
  $dev cmd del $db $t
  $dev cmd put $db $nt "$text"
  on_res
}

proc on_del {} {
  global dev db lst_t
  set i [.lb curselection]
  set t $lst_t($i)
  $dev cmd del $db $t
  on_res
}


proc on_sel {w} {
  global dev db lst_t text tstamp
  # update time and text from the database
  set i [$w curselection]

  if {$i=={}} { return }

  if {$i!=0} {
    set t $lst_t($i)
    set r [lindex [$dev cmd get_prev $db $t] 0]
    set t [lindex $r 0]
    set text   [lrange $r 1 end]
    set tstamp [clock format [expr int($t)] -format "%Y-%m-%d %H:%M:%S"]
    .f1.new_btn configure -state disabled
    .f1.mod_btn configure -state active
    .f1.del_btn configure -state active
  }\
  else {
  set tstamp "now"
  set text {}
    .f1.new_btn configure -state active
    .f1.mod_btn configure -state disabled
    .f1.del_btn configure -state disabled
  }
}

Device $dev
on_res
