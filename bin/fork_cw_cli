#!/usr/bin/wish

proc usage {} {
  puts {
    fork_cw_cli -- command line tool for controlling fork_cw interface

    Usage: sweeper_cli <name> <command>

    <name> name of the sweeper which is set in its configuration file
    <command>:
      set_volt <volt> -- set voltage
      get_volt -- get voltage
      sweep_pair [<volt>] -- set voltage, make 2 sweeps, wait

      set_ampsweep_max [<volt>] -- set max voltage for amp sweep
      get_ampsweep_max  -- get value
      set_ampsweep_step [<volt>] -- set step for amp sweep
      get_ampsweep_step  -- get value
      set_ampsweep_jump [0|1] -- set jump option for amp sweep
      get_ampsweep_jump  -- get value
      ampsweep_go  -- start amp sweep
      set_par <name> <value>  -- change configuration parameter
      get_par <name>  -- get configuration parameter
  }
  exit 1
}

set name [lindex $argv 0]
set cmd  [lindex $argv 1]

if {$name == {}} usage
if {$cmd  == {}} usage

######################################################################

set app $name

if {$cmd == "set_volt"} {
  set v [lindex $argv 2]
  send $app {$gen} set_volt $v
  exit 0
}

if {$cmd == "get_volt"} {
  puts [send $app {$gen} get_volt]
  exit 0
}

if {$cmd == "set_freq"} {
  set v [lindex $argv 2]
  send $app {$gen} set_freq $v
  exit 0
}

if {$cmd == "get_freq"} {
  puts [send $app {$gen} get_freq]
  exit 0
}

######################################################################

if {$cmd == "get_amp"} {
  puts [send $app set fitres(amp)]
  exit 0
}

######################################################################

# sweep_pair [volt]
if {$cmd == "sweep_pair"} {
  set v [lindex $argv 2]
  if {$v != {}} {send $app {$gen} set_volt $v}
  send $app sweep_pan set_mode "Pair"
  send $app sweep_pan restart
  send $app sweep_pan do_step
  while {[send $app sweep_pan is_on]} {
    after 200
  }
  exit 0
}

# sweep_pair_start [volt]
if {$cmd == "sweep_pair_start"} {
  set v [lindex $argv 2]
  if {$v != {}} {send $app {$gen} set_volt $v}
  send $app sweep_pan set_mode "Pair"
  send $app sweep_pan restart
  send $app sweep_pan do_step
  exit 0
}

# sweep_pair_wait
if {$cmd == "sweep_pair_wait"} {
  while {[send $app sweep_pan is_on]} { after 200 }
  exit 0
}

# sweep_both_start [volt]
if {$cmd == "sweep_both_start"} {
  set v [lindex $argv 2]
  if {$v != {}} {send $app {$gen} set_volt $v}
  send $app sweep_pan set_mode "Both"
  send $app sweep_pan restart
  send $app sweep_pan do_step
  exit 0
}

######################################################################

if {$cmd == "set_ampsweep_max"} {
  set v [lindex $argv 2]
  send $app set pars(track_amp_mx) $v
  exit 0
}

if {$cmd == "get_ampsweep_max"} {
  puts [send $app set pars(track_amp_mx)]
  exit 0
}

if {$cmd == "set_ampsweep_step"} {
  set v [lindex $argv 2]
  send $app set pars(track_amp_s) $v
  exit 0
}

if {$cmd == "get_ampsweep_step"} {
  puts [send $app set pars(track_amp_s)]
  exit 0
}

if {$cmd == "set_ampsweep_jump"} {
  set v [lindex $argv 2]
  send $app set pars(track_amp_j) $v
  exit 0
}

if {$cmd == "get_ampsweep_jump"} {
  puts [send $app set pars(track_amp_j)]
  exit 0
}

if {$cmd == "set_par"} {
  set n [lindex $argv 2]
  set v [lindex $argv 3]
  send $app set pars($n) $v
  exit 0
}

if {$cmd == "set_sweep_par"} {
  set n [lindex $argv 2]
  set v [lindex $argv 3]
  send $app sweep_pan set_$n $v
  exit 0
}

if {$cmd == "get_par"} {
  set n [lindex $argv 2]
  puts [send $app set pars($n)]
  exit 0
}

if {$cmd == "set_period"} {
  set v [lindex $argv 2]
  send W2BH mon set_period $v
  exit 0
}

####

if {$cmd == "track_start"} {
  send $app on_track_start
  exit 0
}

if {$cmd == "track_stop"} {
  send $app on_track_stop
  exit 0
}


if {$cmd == "track_amp_up"} {
  send $app on_track_amp_up
  exit 0
}

if {$cmd == "track_amp_down"} {
  send $app on_track_amp_down
  exit 0
}

if {$cmd == "track_adj"} {
  set v [lindex $argv 2]
  send $app track_adj_amp $v
  send $app track_adj_fre 1
  exit 0
}

if {$cmd == "track_adj_fre"} {
  send $app track_adj_fre 1
  exit 0
}

if {$cmd == "track_adj_amp"} {
  set v [lindex $argv 2]
  send $app track_adj_amp $v
  exit 0
}

if {$cmd == "track_adj_amp1"} {
  set v0 [lindex $argv 2]

  set dt [send $app set pars(track_period)]

  set der {}
  set vp 0
  set dp 0
  while {1} {
    # measure current values
    set v [send $app set fitres(amp)]
    set d [send $app {$gen} get_volt]
    set der [expr {($v-$vp)/($d-$dp)}]

    # new drive:
    set dd [expr {($v-$v0)/$der}]
    puts "track_adj_amp: $d -- $v -- $dd"
    set vp $v
    set dp $d
    set d [expr $d-$dd]

    send $app {$gen} set_volt [expr $d]
    if {abs($dd/$d) < 0.01} {break}

    after [expr {round(10*$dt*1000)}]
  }
  exit 0
}



puts "Unknown command: $cmd"


######################################################################
wm withdraw .
after idle exit 0
